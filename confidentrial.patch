diff --git a/src/core/index.h b/src/core/index.h
index 4ac2..d7b6 100644
--- a/src/core/index.h
+++ b/src/core/index.h
@@
-// Transactional index updates (load once, write once)
-int index_load(void);
-// TODO: extend with size, mtime in upcoming format v2
-int index_upsert_entry(const char* filepath,
-                       const char* hash,
-                       unsigned int mode,
-                       int* unchanged_out);
+/*
+ * New index line format (v2)
+ *   hash size mtime mode filepath\n
+ * Example:
+ *   e3b0c442... 0 1697950652 100644 path/to/file.txt
+ *
+ * size      – unsigned bytes
+ * mtime     – epoch seconds (long long)
+ *
+ * v1 lines (hash filepath mode) are still accepted
+ * but will be rewritten in v2 form on the first write.
+ */
+
+int index_load(void);
+int index_upsert_entry(const char* filepath,
+                       const char* hash,
+                       size_t size,
+                       long long mtime,
+                       unsigned int mode,
+                       int* unchanged_out);
+
+/* fast lookup: returns NULL if path absent, else pointer
+ * to an internal struct containing hash, size & mtime      */
+typedef struct {
+    const char* hash;
+    size_t      size;
+    long long   mtime;
+    unsigned int mode;
+} IndexMeta;
+const IndexMeta* index_lookup(const char* filepath);
+
 int index_commit(void);
 // Returns pointer to hash string for given path if present (internal buffer), else NULL
 const char* index_get_hash(const char* filepath);
diff --git a/src/core/index.c b/src/core/index.c
index 8b7e..bef3 100644
--- a/src/core/index.c
+++ b/src/core/index.c
@@
-typedef struct {
-    char* hash;
-    char* path;
-    unsigned int mode;
-} IndexEntry;
+typedef struct {
+    char*  hash;
+    char*  path;
+    size_t size;
+    long long mtime;
+    unsigned int mode;
+} IndexEntry;
@@
 const char* index_get_hash(const char* filepath) {
@@
 }
+
+/* full meta lookup */
+const IndexMeta* index_lookup(const char* filepath) {
+    if (!idx_loaded) return NULL;
+    for (size_t i = 0; i < idx_count; ++i)
+        if (strcmp(idx_entries[i].path, filepath) == 0)
+            return (IndexMeta*)&idx_entries[i];
+    return NULL;
+}
@@  (index_load)  accept both v1 and v2 lines
-            char hash[65], indexed_filepath[256]; unsigned int mode;
-            if (sscanf(line, "%64s %255s %o", hash, indexed_filepath, &mode)==3) {
-                ...
+            char hash[65], indexed_filepath[1024];
+            unsigned int mode; size_t sz=0; long long mt=0;
+            int v = sscanf(line, "%64s %zu %lld %o %1023[^\n]",
+                           hash,&sz,&mt,&mode,indexed_filepath);
+            if (v==5 || (v==3 && (sz=0, mt=0))) { /* v2 or fallback v1 */
+                ...
+                e.size   = sz;
+                e.mtime  = mt;
                 e.mode   = mode;
@@
-int index_upsert_entry(const char* filepath, const char* new_hash,
-                       unsigned int mode, int* unchanged_out) {
+int index_upsert_entry(const char* filepath, const char* new_hash,
+                       size_t size, long long mtime,
+                       unsigned int mode, int* unchanged_out) {
@@  (match / unchanged) logic update
-                if (strcmp(hash, new_hash) == 0) {
+                if (sz==size && mt==mtime && strcmp(hash,new_hash)==0) {
@@  (write back) use v2 format
-            fprintf(dst,"%s %s %o\n", new_hash, filepath, mode);
+            fprintf(dst,"%s %zu %lld %o %s\n",
+                    new_hash, size, mtime, mode, filepath);
diff --git a/src/commands/add.c b/src/commands/add.c
index 20c1..4c3d 100644
--- a/src/commands/add.c
+++ b/src/commands/add.c
@@  (parallel loop)
-        const char* old_hash = index_get_hash(file_paths[i]);
-        if (old_hash) {
-            char new_hash[65];
-            sha256_file_hex(file_paths[i], new_hash);
-            if (strcmp(old_hash, new_hash) == 0) {
-                ...
-        store_blob_from_file(file_paths[i], hashes[i]);
+        const IndexMeta* meta = index_lookup(file_paths[i]);
+        if (meta && meta->size== (size_t)st.st_size && meta->mtime==st.st_mtime) {
+            /* unchanged */
+            strcpy(hashes[i], meta->hash);
+            modes[i] = meta->mode;
+            continue;
+        }
+
+        store_blob_from_file(file_paths[i], hashes[i]);
@@  (upsert call)
-        if (index_upsert_entry(file_paths[i], hashes[i], modes[i], &unchanged)==-1)
+        if (index_upsert_entry(file_paths[i], hashes[i],
+                               (size_t)st.st_size, st.st_mtime,
+                               modes[i], &unchanged)==-1)
diff --git a/src/core/index.c b/src/core/index.c
@@  (legacy standalone add_file_to_index)
-    if (index_upsert_entry(filepath, hash, (unsigned int)st.st_mode, &unchanged)==-1)
+    if (index_upsert_entry(filepath, hash, st.st_size, st.st_mtime,
+                           (unsigned int)st.st_mode, &unchanged)==-1)